@import "tailwindcss";

/* Bellota Text Font */
@font-face {
  font-family: 'Bellota Text';
  src: url('/fonts/BellotaText-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Bellota Text';
  src: url('/fonts/BellotaText-Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Bellota Text';
  src: url('/fonts/BellotaText-Light.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

/* Base font family */
:root {
  --font-bellota: 'Bellota Text', system-ui, -apple-system, sans-serif;
}

body {
  font-family: var(--font-bellota);
  margin: 0;
  padding: 0;
  width: 100%;
  overflow-x: hidden;
}

/* Full width container */
.full-width {
  width: 100vw;
  max-width: 100%;
}

/* Creative parallax effects */
.parallax-section {
  position: relative;
  overflow: hidden;
  isolation: isolate;
}

/* Floating geometric shapes */
.parallax-bg-shapes {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 0;
}

.parallax-shape {
  position: absolute;
  border-radius: 50%;
  filter: blur(1px);
  opacity: 0.03;
}

.parallax-shape-1 {
  width: 200px;
  height: 200px;
  background: linear-gradient(45deg, #1e293b, #334155);
  top: 10%;
  left: 5%;
  animation: floatSlow 25s ease-in-out infinite;
}

.parallax-shape-2 {
  width: 150px;
  height: 150px;
  background: linear-gradient(-45deg, #475569, #64748b);
  top: 60%;
  right: 10%;
  animation: floatMedium 20s ease-in-out infinite reverse;
}

.parallax-shape-3 {
  width: 300px;
  height: 300px;
  background: linear-gradient(135deg, #334155, #475569);
  top: 30%;
  left: 70%;
  animation: floatFast 15s ease-in-out infinite;
}

.parallax-shape-4 {
  width: 100px;
  height: 100px;
  background: linear-gradient(-135deg, #64748b, #94a3b8);
  top: 80%;
  left: 20%;
  animation: floatSlow 30s ease-in-out infinite reverse;
}

/* Gradient waves */
.parallax-waves {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent 30%, rgba(30, 41, 59, 0.02) 50%, transparent 70%);
  animation: waveMove 12s ease-in-out infinite;
}

.parallax-waves-alt {
  background: linear-gradient(-45deg, transparent 20%, rgba(71, 85, 105, 0.03) 40%, transparent 60%);
  animation: waveMove 18s ease-in-out infinite reverse;
}

@keyframes floatSlow {

  0%,
  100% {
    transform: translateY(0) rotate(0deg) scale(1);
  }

  25% {
    transform: translateY(-30px) rotate(90deg) scale(1.1);
  }

  50% {
    transform: translateY(-20px) rotate(180deg) scale(0.9);
  }

  75% {
    transform: translateY(-40px) rotate(270deg) scale(1.05);
  }
}

@keyframes floatMedium {

  0%,
  100% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }

  33% {
    transform: translateX(20px) translateY(-25px) rotate(120deg);
  }

  66% {
    transform: translateX(-15px) translateY(-35px) rotate(240deg);
  }
}

@keyframes floatFast {

  0%,
  100% {
    transform: translateX(0) translateY(0) scale(1);
  }

  50% {
    transform: translateX(-25px) translateY(-30px) scale(1.2);
  }
}

@keyframes waveMove {

  0%,
  100% {
    transform: translateX(-100px) translateY(-50px);
  }

  50% {
    transform: translateX(100px) translateY(50px);
  }
}

/* Scroll-based parallax effects */
.scroll-parallax {
  transform: translateY(var(--parallax-y, 0));
  transition: transform 0.1s ease-out;
}

.scroll-parallax-slow {
  transform: translateY(var(--parallax-y-slow, 0)) scale(var(--parallax-scale, 1));
  transition: transform 0.1s ease-out;
}

.scroll-parallax-fast {
  transform: translateY(var(--parallax-y-fast, 0)) rotate(var(--parallax-rotate, 0deg));
  transition: transform 0.1s ease-out;
}

/* Enhanced floating elements with scroll response */
.parallax-shape-scroll-1 {
  width: 250px;
  height: 250px;
  background: linear-gradient(45deg, rgba(30, 41, 59, 0.08), rgba(51, 65, 85, 0.06));
  border-radius: 50%;
  position: absolute;
  top: 20%;
  right: 15%;
  filter: blur(2px);
  animation: floatSlow 30s ease-in-out infinite;
  transform: translateY(var(--scroll-y, 0)) translateX(var(--scroll-x, 0));
}

.parallax-shape-scroll-2 {
  width: 180px;
  height: 180px;
  background: linear-gradient(-45deg, rgba(71, 85, 105, 0.06), rgba(100, 116, 139, 0.04));
  border-radius: 50%;
  position: absolute;
  top: 70%;
  left: 10%;
  filter: blur(1.5px);
  animation: floatMedium 25s ease-in-out infinite reverse;
  transform: translateY(var(--scroll-y-alt, 0)) scale(var(--scroll-scale, 1));
}

.parallax-shape-scroll-3 {
  width: 320px;
  height: 320px;
  background: linear-gradient(135deg, rgba(51, 65, 85, 0.05), rgba(71, 85, 105, 0.03));
  border-radius: 50%;
  position: absolute;
  top: 40%;
  left: 60%;
  filter: blur(3px);
  animation: floatFast 20s ease-in-out infinite;
  transform: translateY(var(--scroll-y-reverse, 0)) rotate(var(--scroll-rotate, 0deg));
}

/* Scroll-responsive gradient overlays */
.scroll-gradient-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(var(--gradient-angle, 45deg),
      transparent var(--gradient-start, 20%),
      rgba(30, 41, 59, var(--gradient-opacity, 0.02)) var(--gradient-mid, 50%),
      transparent var(--gradient-end, 80%));
  pointer-events: none;
  transition: all 0.3s ease-out;
}

/* Parallax text effects */
.parallax-text {
  transform: translateY(var(--text-parallax-y, 0));
  transition: transform 0.2s ease-out;
}

.parallax-cards {
  transform: translateY(var(--cards-parallax-y, 0)) scale(var(--cards-scale, 1));
  transition: transform 0.15s ease-out;
}

/* Scrollable partner cards - hidden scrollbar */
.partners-scroll {
  scrollbar-width: none;
  /* Firefox */
  -ms-overflow-style: none;
  /* Internet Explorer 10+ */
}

.partners-scroll::-webkit-scrollbar {
  display: none;
  /* WebKit */
}

/* Responsive container */
.responsive-container {
  width: 100%;
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 1rem;
}

@media (min-width: 640px) {
  .responsive-container {
    padding: 0 1.5rem;
  }
}

@media (min-width: 1024px) {
  .responsive-container {
    padding: 0 2rem;
  }
}

@media (min-width: 1280px) {
  .responsive-container {
    padding: 0 2.5rem;
  }
}

/* Ensure features are always visible */
.feature-section {
  visibility: visible !important;
  opacity: 1 !important;
}

/* Classy feature cards */
.feature-card {
  backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-font-smoothing: subpixel-antialiased;
  border: 1px solid rgba(226, 232, 240, 0.8);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.feature-card:hover {
  border-color: rgba(148, 163, 184, 0.6);
  background-color: rgba(248, 250, 252, 0.8);
  transform: translateY(-2px) translateZ(0);
}

:root {
  --background: #ffffff;
  --foreground: #1e293b;
  --navy-blue: #0f172a;
  --navy-blue-light: #1e293b;
  --navy-blue-dark: #020617;
  --gray-white: #f8fafc;
  --gray-light: #e2e8f0;
  --gray-medium: #64748b;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Custom animations */
@keyframes float {

  0%,
  100% {
    transform: translateY(0px);
  }

  50% {
    transform: translateY(-20px);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse-slow {

  0%,
  100% {
    opacity: 0.2;
  }

  50% {
    opacity: 0.4;
  }
}

/* Animation utilities */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-fadeInUp {
  animation: fadeInUp 0.8s ease-out forwards;
}

.animate-pulse-slow {
  animation: pulse-slow 4s ease-in-out infinite;
}

.animation-delay-2000 {
  animation-delay: 2s;
}

.animation-delay-4000 {
  animation-delay: 4s;
}

/* Line clamp utility for text truncation */
.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #a1a1a1;
}

/* Focus states for accessibility */
.focus-visible:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Classy Card Effects */
.modern-card {
  position: relative;
  background: rgba(255, 255, 255, 0.98);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(226, 232, 240, 0.8);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateZ(0);
  -webkit-font-smoothing: subpixel-antialiased;
  will-change: transform, border-color;
}

.modern-card::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(to bottom right,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.05),
      rgba(255, 255, 255, 0));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

.modern-card:hover {
  transform: translateY(-3px) translateZ(0);
  border-color: rgba(148, 163, 184, 0.6);
  background: rgba(255, 255, 255, 1);
}

/* Smooth Scroll Animation */
.scroll-reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-reveal.active {
  opacity: 1;
  transform: translateY(0);
}

/* Stagger Children Animation */
.stagger-children>* {
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.stagger-children.active>* {
  opacity: 1;
  transform: translateY(0);
}

.stagger-children.active>*:nth-child(1) {
  transition-delay: 0.1s;
}

.stagger-children.active>*:nth-child(2) {
  transition-delay: 0.2s;
}

.stagger-children.active>*:nth-child(3) {
  transition-delay: 0.3s;
}

.stagger-children.active>*:nth-child(4) {
  transition-delay: 0.4s;
}

.stagger-children.active>*:nth-child(5) {
  transition-delay: 0.5s;
}

/* Intersection Observer Animation Classes */
.fade-up {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.6s ease-out, transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-up.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Elegant Card Gradients */
.elegant-gradient {
  background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 100%);
}

.elegant-border {
  position: relative;
  border-radius: 16px;
  overflow: hidden;
}

.elegant-border::after {
  content: '';
  position: absolute;
  inset: 0;
  padding: 1px;
  border-radius: inherit;
  background: linear-gradient(to bottom right,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.05));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

/* Button animations */
.btn-animate {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-animate::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-animate:hover::before {
  left: 100%;
}

/* Improved smooth animations */
@keyframes smoothFloat {

  0%,
  100% {
    -webkit-transform: translate3d(0, 0, 0) scale(1);
    transform: translate3d(0, 0, 0) scale(1);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  33% {
    -webkit-transform: translate3d(10px, -15px, 0) scale(1.02);
    transform: translate3d(10px, -15px, 0) scale(1.02);
  }

  66% {
    -webkit-transform: translate3d(-5px, 10px, 0) scale(0.98);
    transform: translate3d(-5px, 10px, 0) scale(0.98);
  }
}

@-webkit-keyframes smoothFloat {

  0%,
  100% {
    -webkit-transform: translate3d(0, 0, 0) scale(1);
    -webkit-backface-visibility: hidden;
  }

  33% {
    -webkit-transform: translate3d(10px, -15px, 0) scale(1.02);
  }

  66% {
    -webkit-transform: translate3d(-5px, 10px, 0) scale(0.98);
  }
}

@keyframes gentleGlow {

  0%,
  100% {
    opacity: 0.1;
    -webkit-filter: blur(40px);
    filter: blur(40px);
  }

  50% {
    opacity: 0.2;
    -webkit-filter: blur(30px);
    filter: blur(30px);
  }
}

@-webkit-keyframes gentleGlow {

  0%,
  100% {
    opacity: 0.1;
    -webkit-filter: blur(40px);
  }

  50% {
    opacity: 0.2;
    -webkit-filter: blur(30px);
  }
}

.animate-smooth-float {
  -webkit-animation: smoothFloat 8s ease-in-out infinite;
  animation: smoothFloat 8s ease-in-out infinite;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000px;
  perspective: 1000px;
  will-change: transform;
}

.animate-gentle-glow {
  -webkit-animation: gentleGlow 6s ease-in-out infinite;
  animation: gentleGlow 6s ease-in-out infinite;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: opacity, filter;
}

/* Navy Blue and Gray White theme utilities */
.bg-navy-primary {
  background-color: var(--navy-blue);
}

.bg-navy-light {
  background-color: var(--navy-blue-light);
}

.bg-gray-white {
  background-color: var(--gray-white);
}

.text-navy {
  color: var(--navy-blue);
}

.text-navy-light {
  color: var(--navy-blue-light);
}

/* Smooth transitions for better UX */
* {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Better focus states */
button:focus-visible,
a:focus-visible,
input:focus-visible {
  outline: 2px solid var(--navy-blue-light);
  outline-offset: 2px;
  border-radius: 4px;
}